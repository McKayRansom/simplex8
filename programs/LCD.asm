NOP 0 #4 = RS, 5 = E, then = RW
LI 0 #SET INSTRUCTION
UI 0
MOVE $5
LI 1
MOVE $1
LI 2
STORE $5
LI 0
MOVE $1
LI 0 #SET 30
UI 3
MOVE $2
NOP 0 #START 1st 30
LI 5
UI 1
MOVE $15
LI 0 # -> command
UI 6
JMP 0 #END 1st 30
NOP 0 #RETURN 2nd 30
LI 12
UI 1
MOVE $15
LI 0 # -> command
UI 6
JMP 0 #END 2nd 30
NOP 0 #RETURN 3rd 30
LI 3
UI 2
MOVE $15
LI 0 # -> command
UI 6
JMP 0 #END 3rd 30
NOP 0 #RETURN 20
LI 0
UI 2
MOVE $2
LI 13
UI 2
MOVE $15
LI 0 # -> command
UI 6
JMP 0 #END 20
NOP 0 #RETURN 01 CLR DISP
LI 1
UI 0
MOVE $2
LI 7
UI 3
MOVE $15
LI 0 # -> command
UI 6
JMP 0 #END 01
NOOP 0 #RETURN 06 ENTRY MODE
LI 6
UI 0
MOVE $2
LI 2
UI 4
MOVE $15
LI 0 # -> command
UI 6
JMP 0 #END 06
NOOP 0
NOOP 0
NOOP 0 # SET DATA
LI 1
UI 0
MOVE $1
LI 2
STORE $1
LI 0
MOVE $1
NOOP 0 #START 'H' 48
LI 4
UI 8
MOVE $2
LI 5
UI 5
MOVE $15
LI 0 # -> command
UI 6
JMP 0 #END 'H' 48
NOOP 0 #START 'I' 49
LI 4
UI 9
MOVE $2
LI 0
UI 10
MOVE $15
LI 0 # -> command
UI 6
JMP 0 #END 'I' 49
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0 #command
ACC $2
UI 0 #RW LOW, RS = DATA, PULSE E 
MOVE $3
LI 1
MOVE $1
STORE $3
ACC $3
UI 2 # E high
MOVE $3
LI 1
UI 0
STORE $3
ACC $2
SHIFT 0
SHIFT 0
SHIFT 0
SHIFT 0
UI 0
MOVE $3
LI 1
STORE $3
ACC $3
UI 2
MOVE $3
LI 1
UI 0
STORE $3
LI 0
MOVE $1
ACC $15
JMP 0 #RET
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0
NOOP 0 #endless loop of death
NOOP 0
LI 0
UI 0
MOVE $2 # zero output
LI 1
MOVE $1
STORE $2
LI 2
STORE $2
LI 0
UI 10
JMP 0
